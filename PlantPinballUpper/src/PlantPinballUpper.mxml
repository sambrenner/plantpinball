<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication	xmlns:fx="http://ns.adobe.com/mxml/2009" 
						xmlns:s="library://ns.adobe.com/flex/spark" 
						xmlns:mx="library://ns.adobe.com/flex/mx"
						height="768"
						width="1024"
						showStatusBar="false"
						windowComplete="init()"
>
	<fx:Script>
		<![CDATA[
			import com.plantpinball.data.AppCommunicationMessage;
			import com.plantpinball.display.DefaultScreenUpper;
			import com.plantpinball.display.LifeMeter;
			import com.plantpinball.events.LocalConnectionEvent;
			import com.plantpinball.events.PlantPinballEvent;
			import com.plantpinball.events.VideoPlayerEvent;
			import com.plantpinball.playfield.display.text.LosePopup;
			import com.plantpinball.playfield.display.text.PopupText;
			import com.plantpinball.playfield.display.text.WinPopup;
			import com.plantpinball.utils.LocalConnectionUtil;
			import com.plantpinball.video.VideoPlayer;
			
			import mx.core.UIComponent;
			
			
			private var _localConnectionUtil:LocalConnectionUtil;
			private var _videoPlayer:VideoPlayer;
			private var _appContainer:UIComponent;
			private var _lifeMeter:LifeMeter;
			
			private function init():void 
			{
				initLocalConnection();
				initVisuals();
			}
			
			private function initVisuals():void
			{
				_appContainer = new UIComponent();
				addElement(_appContainer);
				
				_videoPlayer = new VideoPlayer();
				_videoPlayer.addEventListener(VideoPlayerEvent.VIDEO_STARTED, onVideoStart);
				_videoPlayer.addEventListener(VideoPlayerEvent.VIDEO_STOPPED, onVideoEnd);
				
				_lifeMeter = new LifeMeter();
				_lifeMeter.visible = false;
				
				_appContainer.addChild(new DefaultScreenUpper());
				_appContainer.addChild(_lifeMeter);
				_appContainer.addChild(_videoPlayer);
			}
			
			private function initLocalConnection():void
			{
				_localConnectionUtil = new LocalConnectionUtil("upper", "lower");
				_localConnectionUtil.addEventListener(LocalConnectionEvent.MESSAGE_RECEIVED, onMessageReceived);
			}
			
			private function startGame():void
			{
				_videoPlayer.pause();
				_videoPlayer.hide();
				_lifeMeter.visible = true;
			}
			
			private function wonGame():void
			{
				var popupText:WinPopup = new WinPopup();
				popupText.x = 1024 / 2;
				popupText.y = 768 / 2;
				popupText.addEventListener(PlantPinballEvent.TEXT_COMPLETE, onGameOverTextComplete);
				_appContainer.addChild(popupText);
				popupText.show();
			}
			
			private function lostGame():void
			{
				var popupText:LosePopup = new LosePopup();
				popupText.x = 1024 / 2;
				popupText.y = 768 / 2;
				popupText.addEventListener(PlantPinballEvent.TEXT_COMPLETE, onGameOverTextComplete);
				_appContainer.addChild(popupText);
				popupText.show();
			}
			
			private function onGameOverTextComplete(e:PlantPinballEvent):void
			{
				_lifeMeter.visible = false;
				var text:PopupText = e.target as PopupText;
				text.hide();
			}
			
			private function onVideoStart(e:VideoPlayerEvent):void
			{
				_videoPlayer.visible = true;
			}
			
			private function onVideoEnd(e:VideoPlayerEvent):void
			{Â 
				_videoPlayer.visible = false;
			}
			
			private function onMessageReceived(e:LocalConnectionEvent):void
			{
				trace(e.data.message);
				
				switch(e.data.message)
				{
					case AppCommunicationMessage.PLAY_INTRO:
						_videoPlayer.loadVideo("video/intro_upper.f4v",1024,768);
						break;
					case AppCommunicationMessage.PLAY_TRAMPLE:
						_videoPlayer.loadVideo("video/trample.f4v",1024,768);
						break;
					case AppCommunicationMessage.SET_LIFE_1:
						_lifeMeter.gotoAndStop(1);
						break;
					case AppCommunicationMessage.SET_LIFE_2:
						_lifeMeter.gotoAndStop(2);
						break;
					case AppCommunicationMessage.SET_LIFE_3:
						_lifeMeter.gotoAndStop(3);
						break;
					case AppCommunicationMessage.SET_LIFE_4:
						_lifeMeter.gotoAndStop(4);
						break;
					case AppCommunicationMessage.SET_LIFE_5:
						_lifeMeter.gotoAndStop(5);
						break;
					case AppCommunicationMessage.SET_LIFE_6:
						_lifeMeter.gotoAndStop(6);
						break;
					case AppCommunicationMessage.SET_LIFE_7:
						_lifeMeter.gotoAndStop(7);
						break;
					case AppCommunicationMessage.LOST_GAME:
						lostGame();
						break;
					case AppCommunicationMessage.WON_GAME:
						wonGame();
						break;
					case AppCommunicationMessage.START_GAME:
						startGame();
						break;
				}
			}
		]]>
	</fx:Script>
</s:WindowedApplication>
